# -*- coding: utf-8 -*-
"""Felipe_Avila_Silva_Relatorio1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10yWA86GH5oeanqQx1LQViWWwsdIOeWsl

EXERCICIO 1
"""

#BISSECÇÃO
import math

#intervalo [A,B]
#criterio de parada e

a = -1
b = 0
e = 0.01
d = 0


def f(x):
  return -12 -21*x + 18*x**2 -2.75*x**3
  

if f(a)*f(b) < 0:
  while (math.fabs(b-a)/2 > e):
    d = d + 1
      
    xn = (a+b)/2
    if f(xn) == 0:
      print(" A raiz é:", xn)
      break
    else:
      if f(a)*f(xn) < 0:
        b = xn
      else:
        a = xn

  print("valor final da raiz:", xn)
  print("n interações:", d)      

else:
  print("nao existe raiz")

#FALSA POSIÇÃO
import math

#intervalo [A,B]
#criterio de parada e

a = -1
b = 0

d = 0

r = 0

fa = 0
fb = 0
fr = 0

e = 0.01

def f(x):
  return -12 -21*x + 18*x**2 -2.75*x**3

fa = f(a)
fb = f(b)
r = (b*f(a) - f(b)*a) / (f(a) - f(b))
fr = f(r)

while (math.fabs(f(r)) > e):
  
  d = d + 1
  r = (b*f(a) - f(b)*a) / (f(a) - f(b))
  fr = f(r)
  if fa*fr < 0:
    b = r
    fb = fr
  else:
    a = r
    fa = fr

print("Valor final da raiz:", r)
print("n interações:", d)

"""EXERCICIO 2"""

#BISSECÇÃO
import math
import numpy as np

#intervalo [A,B]
#criterio de parada 3 interações

a = 0.5
b = 2
i = 3

j = 0


def f(x):
  return np.log(x**2) - 0.7
  

if f(a)*f(b) < 0:
  while (j < i):
    j = j + 1  
    xn = (a+b)/2
    if f(xn) == 0:
      print(" A raiz é:", xn)
      break
    else:
      if f(a)*f(xn) < 0:
        b = xn
      else:
        a = xn

  print("valor final da raiz:", xn)      

else:
  print("nao existe raiz")

#FALSA POSIÇÃO
import math
import numpy as np

#intervalo [A,B]
#criterio de parada 3 interações

a = 0.5
b = 2

r = 0

fa = 0
fb = 0
fr = 0

i = 3
j = 0

def f(x):
  return np.log(x**2) - 0.7

fa = f(a)
fb = f(b)
r = (b*f(a) - f(b)*a) / (f(a) - f(b))
fr = f(r)

while (j < i):
  j = j + 1
  
  r = (b*f(a) - f(b)*a) / (f(a) - f(b))
  fr = f(r)
  if fa*fr < 0:
    b = r
    fb = fr
  else:
    a = r
    fa = fr

print("Valor final da raiz:", r)

"""EXERCICIO 3"""

#A) GRAFICAMENTE
#Maior raiz real

import math
import matplotlib.pyplot as plt
import numpy as np

def f(x):
  return 0.95*x**3 - 5.9*x**2 + 10.9*x - 6

inicio = 0
fim = 3.5
n_ptos = 100

curva = np.linspace(inicio, fim, n_ptos)
valores = [f(valor)for valor in curva]

plt.plot(curva, valores, linestyle = '-')
plt.grid()
plt.show()

#B) TANGENTE OU NEWTON RAPHSON

import math 

def f(x):
  return 0.95*x**3 - 5.9*x**2 + 10.9*x - 6

def fl(x):
  return 2.85*x**2 - 11.8*x + 10.9

x0 = 3.5
x1 = 0
i = 3
j = 0

while j < i:
  
  x1 = x0 - f(x0)/fl(x0)
  x0 = x1
  j = j + 1

print("Maior valor da raiz:", x1)

#C) SECANTE
import math 

def f(x):
  return 0.95*x**3 - 5.9*x**2 + 10.9*x - 6

x0 = 2.5
x1 = 3.5
x2 = 0
i = 3
j = 0

while j < i:
  
  x2 = x1 - (f(x1) / (f(x1) - f(x0))) * (x1 - x0)
  x0 = x1
  x1 = x2
  j = j + 1

print("Maior valor da raiz:", x1)

"""EXERCICIO 4"""

#A) GRAFICAMENTE
#Menor raiz real

import math
import matplotlib.pyplot as plt
import numpy as np

def f(x):
  return 8*math.sin(x) *  math.exp(-x) - 1

inicio = -2
fim = 10
n_ptos = 100

curva = np.linspace(inicio, fim, n_ptos)
valores = [f(valor)for valor in curva]

plt.plot(curva, valores, linestyle = '-')
plt.grid()
plt.show()

#B) TANGENTE OU NEWTON RAPHSON

import math 

def f(x):
  return 8*math.sin(x) *  math.exp(-x) - 1

def fl(x):
  return 8*math.exp(-x) * (math.cos(x) - math.sin(x))

x0 = 0.3
x1 = 0
i = 3
j = 0

while j < i:
  
  x1 = x0 - f(x0)/fl(x0)
  x0 = x1
  j = j + 1

print("Menor valor da raiz:", x1)

#C) SECANTE
import math 

def f(x):
  return 8*math.sin(x) *  math.exp(-x) - 1

x0 = 0.5
x1 = 0.4
x2 = 0
i = 3
j = 0

while j < i:
  
  x2 = x1 - (f(x1) / (f(x1) - f(x0))) * (x1 - x0)
  x0 = x1
  x1 = x2
  j = j + 1

print("Menor valor da raiz:", x1)

"""EXERCICIO 5

A) VERIFICAÇÃO DE X1 X2 X3 X4 X5
"""

#X1 [-1, -0.75]
import math

#intervalo [A,B]
#criterio de parada e

a = -1
b = -0.75
e = 0.001

d = 0

def f(x):
  return x**5 - (10/3)*x**3 + 5/21*x

if f(a)*f(b) < 0:
  while (math.fabs(b-a)/2 > e):
    d = d + 1  
    xn = (a+b)/2
    if f(xn) == 0:
      print(" A raiz é:", xn)
      break
    else:
      if f(a)*f(xn) < 0:
        b = xn
      else:
        a = xn

  print("valor final da raiz:", xn)      

else:
  print("nao exite raiz neste intervalo")

print("n interações:", d)

#X2 [-0.75, -0.25]
import math

#intervalo [A,B]
#criterio de parada e

a = -0.75
b = -0.25
e = 0.001

d = 0

def f(x):
  return x**5 - (10/3)*x**3 + 5/21*x

if f(a)*f(b) < 0:
  while (math.fabs(b-a)/2 > e):
    d = d + 1  
    xn = (a+b)/2
    if f(xn) == 0:
      print(" A raiz é:", xn)
      break
    else:
      if f(a)*f(xn) < 0:
        b = xn
      else:
        a = xn

  print("valor final da raiz:", xn)
  print("n interações:", d)      

else:
  print("nao exite raiz neste intervalo")

#X3 [-0.25, 0.25]
import math

#intervalo [A,B]
#criterio de parada e

a = -0.25
b = 0.25
e = 0.001

d = 0 

def f(x):
  return x**5 - (10/3)*x**3 + 5/21*x

if f(a)*f(b) < 0:
  while (math.fabs(b-a)/2 > e):
    d = d + 1  
    xn = (a+b)/2
    if f(xn) == 0:
      print(" A raiz é:", xn)
      break
    else:
      if f(a)*f(xn) < 0:
        b = xn
      else:
        a = xn

  print("valor final da raiz:", xn)
  print("n interações:", d)      

else:
  print("nao exite raiz neste intervalo")

#X4 [0.3, 0.8]
import math

#intervalo [A,B]
#criterio de parada e

a = 0.3
b = 0.8
e = 0.001

d = 0

def f(x):
  return x**5 - (10/3)*x**3 + 5/21*x

if f(a)*f(b) < 0:
  while (math.fabs(b-a)/2 > e):
    d = d + 1  
    xn = (a+b)/2
    if f(xn) == 0:
      print(" A raiz é:", xn)
      break
    else:
      if f(a)*f(xn) < 0:
        b = xn
      else:
        a = xn

  print("valor final da raiz:", xn)     
  

else:
  print("nao exite raiz neste intervalo")
  print("n interações:", d)

#X5 [0.8, 1]
import math

#intervalo [A,B]
#criterio de parada e

a = 0.3
b = 1
e = 0.001

d = 0

def f(x):
  return x**5 - (10/3)*x**3 + 5/21*x

if f(a)*f(b) < 0:
  while (math.fabs(b-a)/2 > e):
    d = d + 1  
    xn = (a+b)/2
    if f(xn) == 0:
      print(" A raiz é:", xn)
      break
    else:
      if f(a)*f(xn) < 0:
        b = xn
      else:
        a = xn

  print("valor final da raiz:", xn)      

else:
  print("nao exite raiz neste intervalo")
  print("n interação:", d)

"""B)ENCONTRANDO A RAIZ"""

#X1 TANGENTE  
#X0 = -0.8

import math 

def f(x):
  return x**5 - (10/3)*x**3 + 5/21*x

def fl(x):
  return 5*x**4 - 10*x**2 + (5/21)

x0 = -0.8
x1 = 0
i = math.inf
j = 0
e = 10**-5

d = 0

while j < i:
  d = d + 1
  x1 = x0 - f(x0)/fl(x0)
  if f(x1) < e:
    print("Valor da raiz:", x1)
    print("n interações:", d)
    break 
  else:  
    x0 = x1
    j = j + 1

#X2 BISSECÇÃO
# a= -0.75 b= -0.25

import math

#intervalo [A,B]
#criterio de parada e

a = -0.75
b = -0.25
e = 10**-5

d = 0

def f(x):
  return x**5 - (10/3)*x**3 + 5/21*x
  

if f(a)*f(b) < 0:
  while (math.fabs(b-a)/2 > e):
    d = d + 1  
    xn = (a+b)/2
    if f(xn) == 0:
      print(" A raiz é:", xn)
      break
    else:
      if f(a)*f(xn) < 0:
        b = xn
      else:
        a = xn

  print("valor final da raiz:", xn)
  print("n interações:", d)      

else:
  print("nao existe raiz")

#X3 FALSA POSIÇÃO
# a = -0.25 b = 0.25 
import math

#intervalo [A,B]
#criterio de parada e

a = -0.25
b = 0.25

r = 0

fa = 0
fb = 0
fr = 0

d = 0
e = 10**-5

def f(x):
  return x**5 - (10/3)*x**3 + 5/21*x

fa = f(a)
fb = f(b)
r = (b*f(a) - f(b)*a) / (f(a) - f(b))
fr = f(r)

while (math.fabs(f(r)) > e):
  d = d + 1
  r = (b*f(a) - f(b)*a) / (f(a) - f(b))
  fr = f(r)
  if fa*fr < 0:
    b = r
    fb = fr
  else:
    a = r
    fa = fr

print("Valor final da raiz:", r)
print("n interações:", d)

#X4 SECANTE
#X0 = 0.3  X1 = 0.8

import math 

def f(x):
  return x**5 - (10/3)*x**3 + 5/21*x

x0 = 0.3
x1 = 0.8
x2 = 0
i = math.inf
j = 0

d = 0

e = 10**-5

while j < i:
  d = d + 1
  x2 = x1 - (f(x1) / (f(x1) - f(x0))) * (x1 - x0)
  x0 = x1
  x1 = x2
  if f(x1) < e:
    print("Valor da raiz", x1)
    print("n interações:", d) 
    break
  else:
    j = j + 1

#X5 SECANTE
#X0 = 0.8 X1 = 1

import math 

def f(x):
  return x**5 - (10/3)*x**3 + 5/21*x

x0 = 0.8
x1 = 1
x2 = 0
i = math.inf
j = 0

d = 0

e = 10**-5

while j < i:
  d = d + 1
  x2 = x1 - (f(x1) / (f(x1) - f(x0))) * (x1 - x0)
  x0 = x1
  x1 = x2
  if f(x1) < e:
    print("Valor da raiz", x1)
    print("n interações:", d) 
    break
  else:
    j = j + 1

"""EXERCICIO 6

A)
"""

#BISSECÇÃO
import math
 
#intervalo [A,B]
#criterio de parada e
 
a = 1
b = 2
e = 10**-4
 
d = 0
 
def f(x):
  return math.exp(-x**2) - math.cos(x)
  
 
if f(a)*f(b) < 0:
  while (math.fabs(b-a)/2 > e):
    d = d + 1
    xn = (a+b)/2
    if f(xn) == 0:
      print(" A raiz é:", xn)
      break
    else:
      if f(a)*f(xn) < 0:
        b = xn
      else:
        a = xn
 
  print("valor final da raiz:", xn)
  print("n interações:", d)      
 
else:
  print("nao existe raiz")

#FALSA POSIÇÃO
import math
 
#intervalo [A,B]
#criterio de parada e
 
a = 1
b = 2
 
d = 0
 
r = 0
 
fa = 0
fb = 0
fr = 0
 
e = 10**-4
 
def f(x):
  return math.exp(-x**2) - math.cos(x)
 
fa = f(a)
fb = f(b)
r = (b*f(a) - f(b)*a) / (f(a) - f(b))
fr = f(r)
 
while (math.fabs(f(r)) > e):
  d = d + 1
  r = (b*f(a) - f(b)*a) / (f(a) - f(b))
  fr = f(r)
  if fa*fr < 0:
    b = r
    fb = fr
  else:
    a = r
    fa = fr
 
print("Valor final da raiz:", r)
print("n interações;", d)

#SECANTE

import math 

def f(x):
  return math.exp(-x**2) - math.cos(x)

x0 = 2
x1 = 1.5
x2 = 0
i = math.inf
j = 0

d = 0

e = 10**-4

while j < i:
  d= d + 1  
  x2 = x1 - (f(x1) / (f(x1) - f(x0))) * (x1 - x0)
  x0 = x1
  x1 = x2
  if f(x1) < e:
    print("Valor da raiz", x1)
    print("n interações", d)
    break
  else:
    j = j + 1

#TANGENTE
import math 

def f(x):
  return math.exp(-x**2) - math.cos(x)

def fl(x):
  return -2*math.exp(-x**2) + math.sin(x)

x0 = 2
x1 = 1.5
i = math.inf
j = 0
e = 10**-4

d = 0

while j < i:
  d = d + 1
  x1 = x0 - f(x0)/fl(x0)
  if f(x1) < e:
    print("Valor da raiz:", x1)
    print("n interações:", d)
    break 
  else:  
    x0 = x1
    j = j + 1

"""B)"""

#BISSECÇÃO
import math

#intervalo [A,B]
#criterio de parada e

a = 1
b = 2
e = 10**-6

d = d + 1


def f(x):
  return x**3 - x - 1
  

if f(a)*f(b) < 0:
  while (math.fabs(b-a)/2 > e):
      
    xn = (a+b)/2
    if f(xn) == 0:
      print(" A raiz é:", xn)
      break
    else:
      if f(a)*f(xn) < 0:
        b = xn
      else:
        a = xn

  print("valor final da raiz:", xn)
  print("n interações:", d)      

else:
  print("nao existe raiz")

#FALSA POSIÇÃO
import math

#intervalo [A,B]
#criterio de parada e

a = 1
b = 2

d = 0

r = 0

fa = 0
fb = 0
fr = 0

e = 10**-6

def f(x):
  return x**3 - x - 1

fa = f(a)
fb = f(b)
r = (b*f(a) - f(b)*a) / (f(a) - f(b))
fr = f(r)

while (math.fabs(f(r)) > e):
  d = d + 1
  r = (b*f(a) - f(b)*a) / (f(a) - f(b))
  fr = f(r)
  if fa*fr < 0:
    b = r
    fb = fr
  else:
    a = r
    fa = fr

print("Valor final da raiz:", r)
print("n interações:", d)

#SECANTE

import math 

def f(x):
  return x**3 - x - 1

x0 = 2
x1 = 1.5
x2 = 0
i = math.inf
j = 0

d = 0

e = 10**-6

while j < i:
  d = d + 1
  x2 = x1 - (f(x1) / (f(x1) - f(x0))) * (x1 - x0)
  x0 = x1
  x1 = x2
  if f(x1) < e:
    print("Valor da raiz", x1)
    print("n interações:", d)
    break
  else:
    j = j + 1

#TANGENTE
import math 

def f(x):
  return x**3 - x - 1

def fl(x):
  return 3*x**2 - 1

x0 = 2
x1 = 1.5
i = math.inf
j = 0
e = 10**-6
d = 0

while j < i:
  d = d + 1
  x1 = x0 - f(x0)/fl(x0)
  if f(x1) < e:
    print("Valor da raiz:", x1)
    print("n interações:", d)
    break 
  else:  
    x0 = x1
    j = j + 1

"""C)"""

#BISSECÇÃO
import math

#intervalo [A,B]
#criterio de parada e

a = 0
b = 1
e = 10**-5

d = 0


def f(x):
  return 4 * math.sin(x) - math.exp(x)
  

if f(a)*f(b) < 0:
  while (math.fabs(b-a)/2 > e):
    d = d + 1  
    xn = (a+b)/2
    if f(xn) == 0:
      print(" A raiz é:", xn)
      break
    else:
      if f(a)*f(xn) < 0:
        b = xn
      else:
        a = xn

  print("valor final da raiz:", xn)
  print("n interações:", d)      

else:
  print("nao existe raiz")

#FALSA POSIÇÃO
import math

#intervalo [A,B]
#criterio de parada e

a = 0
b = 1

d = 0

r = 0

fa = 0
fb = 0
fr = 0

e = 10**-5

def f(x):
  return 4 * math.sin(x) - math.exp(x)

fa = f(a)
fb = f(b)
r = (b*f(a) - f(b)*a) / (f(a) - f(b))
fr = f(r)

while (math.fabs(f(r)) > e):
  d = d + 1
  r = (b*f(a) - f(b)*a) / (f(a) - f(b))
  fr = f(r)
  if fa*fr < 0:
    b = r
    fb = fr
  else:
    a = r
    fa = fr

print("Valor final da raiz:", r)
print("n interações:", d)

#SECANTE

import math 

def f(x):
  return 4 * math.sin(x) - math.exp(x)

x0 = 0.5
x1 = 0.1
x2 = 0
i = math.inf
j = 0

d = 0

e = 10**-5

while j < i:
  d = d + 1
  x2 = x1 - (f(x1) / (f(x1) - f(x0))) * (x1 - x0)
  x0 = x1
  x1 = x2
  if f(x1) < e:
    print("Valor da raiz", x1)
    print("n interações:", d)
    break
  else:
    j = j + 1

#TANGENTE
import math 

def f(x):
  return 4 * math.sin(x) - math.exp(x)

def fl(x):
  return 4*math.cos(x) - math.exp(x)

x0 = 0.4
x1 = 0
i = math.inf
j = 0
e = 10**-5

d = 0

while j < i:
  d = d + 1
  x1 = x0 - f(x0)/fl(x0)
  if f(x1) < e:
    print("Valor da raiz:", x1)
    print("n interações:", d)
    break 
  else:  
    x0 = x1
    j = j + 1

"""D)"""

#BISSECÇÃO
import math

#intervalo [A,B]
#criterio de parada e

a = 2
b = 3
e = 10**-7

d = 0


def f(x):
  return x * math.log(x,10) - 1
  

if f(a)*f(b) < 0:
  while (math.fabs(b-a)/2 > e):
    d = d + 1  
    xn = (a+b)/2
    if f(xn) == 0:
      print(" A raiz é:", xn)
      break
    else:
      if f(a)*f(xn) < 0:
        b = xn
      else:
        a = xn

  print("valor final da raiz:", xn)
  print("n interações:", d)      

else:
  print("nao existe raiz")

#FALSA POSIÇÃO
import math

#intervalo [A,B]
#criterio de parada e

a = 2
b = 3

d = 0

r = 0

fa = 0
fb = 0
fr = 0

e = 10**-7

def f(x):
  return x * math.log(x,10) - 1

fa = f(a)
fb = f(b)
r = (b*f(a) - f(b)*a) / (f(a) - f(b))
fr = f(r)

while (math.fabs(f(r)) > e):
  d = d + 1
  r = (b*f(a) - f(b)*a) / (f(a) - f(b))
  fr = f(r)
  if fa*fr < 0:
    b = r
    fb = fr
  else:
    a = r
    fa = fr

print("Valor final da raiz:", r)
print("valor final da raiz:", d)

#SECANTE

import math 

def f(x):
  return x * math.log(x,10) - 1

x0 = 3
x1 = 2.5
x2 = 0
i = math.inf
j = 0

d = 0

e = 10**-7

while j < i:
  d = d + 1
  x2 = x1 - (f(x1) / (f(x1) - f(x0))) * (x1 - x0)
  x0 = x1
  x1 = x2
  if f(x1) < e:
    print("Valor da raiz", x1)
    print("n interações:", d)
    break
  else:
    j = j + 1

#TANGENTE
import math
import numpy as np 

def f(x):
  return x * math.log(x,10) - 1

def fl(x):
  return math.log(x,10) + (1/np.log(10))

x0 = 3
x1 = 2.5
i = math.inf
j = 0
e = 10**-7

d = 0

while j < i:
  d = d + 1
  x1 = x0 - f(x0)/fl(x0)
  if f(x1) < e:
    print("Valor da raiz:", x1)
    print("n interações:", d)
    break 
  else:  
    x0 = x1
    j = j + 1